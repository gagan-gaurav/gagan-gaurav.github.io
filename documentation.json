{
    "pipes": [],
    "interfaces": [],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [
        {
            "name": "AppConfig",
            "id": "class-AppConfig-a3c3b7570a2a090524e47f68d167ac8ac6d8dd482a1fb60a04ac277f4500e8e6695609f2aa5f945616e9d24637760b2978e93cb68f9b7659b1a8498ae4dd4556",
            "file": "src/config/app.config.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export class AppConfig{\r\n\tHOME_X: number = 10;\r\n\tHOME_Y: number = 10;\r\n}",
            "properties": [
                {
                    "name": "HOME_X",
                    "defaultValue": "10",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "HOME_Y",
                    "defaultValue": "10",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-f8a8c78b64019b44f101fa9f6ef6019f652990a89aeedbea5bf15db6ef1ef953f43ae43ef5832d17d481b429004e3383fad8b5ac9c2836e2f0635467a426eed6",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'portfolio'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'portfolio';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<router-outlet> </router-outlet>\n<!-- <p> is it working?? </p>  -->"
        },
        {
            "name": "CardComponent",
            "id": "component-CardComponent-cc5688804b206e54cacf9407274b27aff71cafb5fd7279f155e917d77ab7397666375b9ec3a4524a9ace0ade0b177f802c2e7fdf02d7d6a2c121fbe12f10faf5",
            "file": "src/lib/card/card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-card",
            "styleUrls": [
                "./card.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./card.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-card',\n  templateUrl: './card.component.html',\n  styleUrls: ['./card.component.scss']\n})\nexport class CardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".card-container{\r\n\theight: 100vh;\r\n\twidth: 100vw;\r\n\tbackground-color: rgba(225, 225, 225, 0.5);\r\n\tdisplay: flex;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n\r\n\t.card{\r\n\t\theight: 800px;\r\n\t\twidth: 1000px;\r\n\t\tbackground-color: aquamarine;\r\n\t\tborder-radius: 10px;\r\n\t\tbox-shadow: 0 10px 25px -5px rgb(0 0 0 / 0.2), 0 8px 10px -6px rgb(0 0 0 / 0.1);\r\n\t\t// opacity: 1;\r\n\t\t// transform: translateY(30px);\r\n\t\t// transition: all 300ms ease-out;\r\n\t}\r\n}",
                    "styleUrl": "./card.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"card-container\"> \n\t<div class = \"card\">\n\t\t\n\t</div>\n</div>\n\n\n"
        },
        {
            "name": "WallComponent",
            "id": "component-WallComponent-5f99f1d5e735f893bafb36a7c4549c415e73609895ea30aaab0abe7827e830e640b2c1ab0a35060e37d98a1cc727e724d1ab7a48439c6fc7a045959133fb26b2",
            "file": "src/lib/wall/wall.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-wall",
            "styleUrls": [
                "./wall.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./wall.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "cardVisible",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "cardX1",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "cardX2",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "cardY1",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "cardY2",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "initialCardHeight",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "initialWidth",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "insideHome",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "insideMenubar",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "mouseHold1",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "mouseHold2",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "router",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Router",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "x1",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "x2",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "y1",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "y2",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "flipCard",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 120,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "mouseOver",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 102,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "mouseOverMenubar",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 111,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onMouseDown",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'document:mousedown', ['$event']"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onMouseMove",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 81,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'document:mousemove', ['$event']"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onMouseUp",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'document:mouseup', ['$event']"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onResize",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'window:resize', ['$event']"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "document:mousedown",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 52
                },
                {
                    "name": "document:mousemove",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 81
                },
                {
                    "name": "document:mouseup",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 70
                },
                {
                    "name": "window:resize",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 44
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ThisReceiver } from '@angular/compiler';\nimport { Component, OnInit, HostListener} from '@angular/core';\nimport {Router } from '@angular/router';\nimport { AppConfig } from 'src/config/app.config';\n\n@Component({\n  selector: 'app-wall',\n  templateUrl: './wall.component.html',\n  styleUrls: ['./wall.component.scss']\n})\n\nexport class WallComponent implements OnInit {\n\n  public mouseHold1: boolean = false; // for button\n  public mouseHold2: boolean = false; // for card\n  public insideHome: boolean = false;\n  public x1: number = 0; // left\n  public y1: number = 0; // top\n  public x2: number = 0;\n  public y2: number = 0;\n  public initialWidth = 0;\n  public cardVisible: boolean = false;\n  public cardX1: number = 0;\n  public cardY1: number = 0;\n  public cardX2: number = 0;\n  public cardY2: number = 0;\n  public initialCardHeight = 0;\n  public insideMenubar: boolean = false;\n\n  \n  constructor(public router: Router) { \n    this.initialWidth = window.innerWidth;\n    this.x1 = window.innerWidth - 100;\n    this.y1 = 50;\n    // this.cardY1= window.innerHeight;\n    // this.cardX1 = window.innerWidth / 5;\n  }\n\n  ngOnInit(): void {\n  }\n\n  // this maintains the position of button with respect to right side, when window size is changing.\n  @HostListener('window:resize', ['$event'])\n  onResize(event: any) {\n    this.x1 -= this.initialWidth - window.innerWidth;\n    this.initialWidth = window.innerWidth;\n  }\n\n\n  // listen to the mouseclick is pressed.\n  @HostListener('document:mousedown', ['$event'])\n  onMouseDown(event: MouseEvent) {\n    // console.log(event.clientX);\n    // this.mouseHold = true;\n    if(this.insideHome){\n      this.mouseHold1 = true;\n      this.x2 = event.clientX;\n      this.y2 = event.clientY;\n    }\n\n    if(this.insideMenubar){\n      this.mouseHold2 = true;\n      this.cardX2 = event.clientX;\n      this.cardY2 = event.clientY;\n    }\n  }\n\n  // when mouse click is released.\n  @HostListener('document:mouseup', ['$event'])\n  onMouseUp(event: MouseEvent) {\n    console.log(event);\n    // this.mouseHold = true;\n    this.mouseHold1 = false;\n    this.mouseHold2 = false;\n    this.insideHome = false;\n    this.insideMenubar = false;\n  }\n\n  // when mouse is moving.\n  @HostListener('document:mousemove', ['$event'])\n  onMouseMove(event: MouseEvent) {\n    console.log(this.mouseHold2);\n    if(this.mouseHold1 && this.insideHome){\n      this.x1 += event.clientX - this.x2;\n      this.x2 = event.clientX;\n      this.y1 += event.clientY - this.y2;\n      this.y2 = event.clientY;\n    }\n\n    if(this.mouseHold2 && this.insideMenubar){\n      this.cardX1 += event.clientX - this.cardX2;\n      this.cardX2 = event.clientX;\n      this.cardY1 += event.clientY - this.cardY2;\n      this.cardY2 = event.clientY;\n    }\n\n\n    // this.mouseHold = true;\n  }\n\n  // when mouse is inside the div.\n  mouseOver(){\n    // console.log(\"mosuerover\");\n    this.insideHome = true;\n  }\n\n  // mouseOut(){\n  //   if(this.mouseHold == false) this.insideHome = false;\n  // }\n\n  mouseOverMenubar(){\n    this.insideMenubar = true;\n  }\n\n  // mouseOutMenubar(){\n  //   if(this.mouseHold == false) this.insideMenubar = false;\n  // }\n\n\n  flipCard() {\n    // console.log(this.cardVisible);\n    this.cardVisible = !this.cardVisible;\n    // console.log(this.cardVisible);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".back{\r\n\toverflow: hidden;\r\n\theight: 100vh;\r\n\twidth: 100vw;\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tjustify-content: center;\r\n\tz-index: 0;\r\n\t// background-image: url(\"/assets/wall/images/wall1.jpg\");\r\n\tbackground-color: lightblue;\r\n\t\r\n\r\n\t.btn{\r\n\t\tbackground-color: red;\r\n\t\tposition: absolute;\r\n\t\theight: 40px;\r\n\t\twidth: 80px;\r\n\t\tz-index: 1;\r\n\t\tcursor: pointer;\r\n\t}\r\n\r\n\t.card-container{\r\n\t\tz-index: 3;\r\n\t\theight: 800px;\r\n\t\twidth: 1200px;\r\n\t\tposition: absolute;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tbackground-color: aquamarine;\r\n\t\tborder-radius: 20px;\r\n\t\tbox-shadow: 0 10px 25px -5px rgb(0 0 0 / 0.2), 0 8px 10px -6px rgb(0 0 0 / 0.1);\r\n\t\tvisibility: visible;\r\n\t\ttransform: translateY(20px);\r\n\t\ttransition: all 100ms ease-out;\r\n\r\n\t\t&.show-card{\r\n\t\t\tvisibility: hidden;\r\n\t\t\ttransform: translateY(0);\r\n\t\t}\r\n\r\n\t\t.menu-bar{\r\n\t\t\twidth: 100%;\r\n\t\t\theight: 4%;\r\n\t\t\tbackground-color: lightgoldenrodyellow;\r\n\t\t\tborder-radius: 20px 20px 0px 0px;\r\n\t\t\tborder: 3px solid black;\r\n\t\t\tdisplay: flex;\r\n\t\t\tflex-direction: row;\r\n\t\t\talign-items: center;\r\n\r\n\t\t\t.first{\r\n\t\t\t\theight: 15px;\r\n\t\t\t\twidth: 15px;\r\n\t\t\t\tbackground-color: lightcoral;\r\n\t\t\t\tborder-radius: 10px 10px 10px 10px;\r\n\t\t\t\tborder: 3px solid black;\r\n\t\t\t\tmargin-left: 10px;\r\n\t\t\t}\r\n\t\t\t.second{\r\n\t\t\t\theight: 15px;\r\n\t\t\t\twidth: 15px;\r\n\t\t\t\tbackground-color: white;\r\n\t\t\t\tborder-radius: 10px 10px 10px 10px;\r\n\t\t\t\tborder: 3px solid black;\r\n\t\t\t\tmargin-left: 10px;\r\n\t\t\t}\r\n\t\t\t.third{\r\n\t\t\t\theight: 15px;\r\n\t\t\t\twidth: 15px;\r\n\t\t\t\tbackground-color: white;\r\n\t\t\t\tborder-radius: 10px 10px 10px 10px;\r\n\t\t\t\tborder: 3px solid black;\r\n\t\t\t\tmargin-left: 10px;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t.content-box{\r\n\t\t\tbackground-color: lightgoldenrodyellow;\r\n\t\t\twidth: 100%;\r\n\t\t\theight: 96%;\r\n\t\t\tborder-radius: 0px 0px 20px 20px;\r\n\t\t\tborder: 3px solid black;\r\n\t\t}\r\n\t}\r\n\r\n\r\n}\r\n\r\n",
                    "styleUrl": "./wall.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 28,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "\n<div class = \"back\">\n\t<button class = \"btn\" (click)=\"flipCard()\" (mouseover)=\"mouseOver()\"  style = \"top: {{y1}}px; left: {{x1}}px\" > About </button> \n\n\t<div class = \"card-container\" [class.show-card] = \"cardVisible\" style = \"top: {{cardY1}}px; left: {{cardX1}}px\">\n\t\t<div class=\"menu-bar\" (mouseover)=\"mouseOverMenubar()\">\n\t\t\t<div class=\"first\" (click)=\"flipCard()\" ></div>\n\t\t\t<div class=\"second\" (click)=\"flipCard()\"></div>\n\t\t\t<div class=\"third\"></div>\n\t\t</div>\t\n\t\t<div class=\"content-box\">\n\n\t\t</div>\n\t</div>\n</div>\n\n"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-b0bb343999c0401a2e3ecbec65490c5a76866396b25cae82ed79702c1d4e115033ea8c8ade9395518e8eba42217f2ec5d6c7a62f3d969b3ab2838fe206d56a66",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-5e74f29dd777e025f3e35e0aa7025313a2852135707b29e0c1c549194f30ff229e084da583e2a4d459cd42476dce7d973eb5f0b780b6d1d616727af881bfb4b7",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CardComponent } from 'src/lib/card/card.component';\nimport { WallComponent } from 'src/lib/wall/wall.component';\nimport { AppComponent } from './app.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/app-wall', pathMatch : 'full'},\n  { path: \"app-wall\", component: WallComponent},\n  { path: \"app-card\", component: CardComponent},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\n\nexport class AppRoutingModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "Card",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: false\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: true\n}"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(args: CardComponent) => ({\r\n\tcomponet: CardComponent,\r\n\tprops: args\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/wall.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(args: WallComponent) => ({\r\n\tcomponet: WallComponent,\r\n\tprops: args\r\n})"
            },
            {
                "name": "Wall",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/wall.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/stories/card.stories.ts": [
                {
                    "name": "Card",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(args: CardComponent) => ({\r\n\tcomponet: CardComponent,\r\n\tprops: args\r\n})"
                }
            ],
            "src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: false\n}"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: true\n}"
                }
            ],
            "src/stories/wall.stories.ts": [
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/wall.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(args: WallComponent) => ({\r\n\tcomponet: WallComponent,\r\n\tprops: args\r\n})"
                },
                {
                    "name": "Wall",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/wall.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [
                    {
                        "path": "",
                        "redirectTo": "/app-wall",
                        "pathMatch": "full"
                    },
                    {
                        "path": "app-wall",
                        "component": "WallComponent"
                    },
                    {
                        "path": "app-card",
                        "component": "CardComponent"
                    }
                ],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/config/app.config.ts",
                "type": "class",
                "linktype": "classe",
                "name": "AppConfig",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/lib/card/card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/lib/wall/wall.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "WallComponent",
                "coveragePercent": 0,
                "coverageCount": "0/30",
                "status": "low"
            },
            {
                "filePath": "src/stories/card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Card",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/wall.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/wall.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Wall",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}